`r kable(group_by(user.repo, language) %>%
summarise(forks = mean(forks), total_repo = n()))`
kable(group_by(user.repo, language) %>% summarise(forks = mean(forks), total_repo = n()))
summary.table <- group_by(user.repo, language) %>% summarise(forks = mean(forks), total_repo = n())
colnames(summary.table) <- c('Language', 'Forks', 'Total Repositories')
View(summary.table)
install.packages('ggplot2')
library('ggplot2')
install.packages('plotly')
library('plotly')
p <- plot_ly(
x = ("C++", "CSS", "JavaScript", "N/A")
y = (10, 2, 11.42857, 3.2)
name = "Languages Forked",
type =
)
p <- plot_ly(
x = ("C++", "CSS", "JavaScript", "N/A")
y = (10, 2, 11.42857, 3.2)
name = "Languages Forked",
type = "bar"
)
install.packages('plotly')
install.packages("plotly")
library('plotly')
p <- plot_ly(
x = ("C++", "CSS", "JavaScript", "N/A")
y = (10, 2, 11.42857, 3.2)
name = "Languages Forked",
type = "bar"
)
p <- plot_ly(
x = c("C++", "CSS", "JavaScript", "N/A"),
y = c(10, 2, 11.42857, 3.2)
name = "Languages Forked",
type = "bar"
)
library('plotly')
p <- plot_ly(
x = c("C++", "CSS", "JavaScript", "N/A"),
y = c(10, 2, 11.42857, 3.2),
name = "Languages Forked",
type = "bar"
)
View(p)
p <- plot_ly(
x = c("C++", "CSS", "JavaScript", "N/A"),
y = c(10, 2, 11.42857, 3.2),
name = "Languages Forked",
type = "bar"
)
plot_ly(user.repo, x = ~watchers, y = ~forks, type = 'scatter',
mode = 'text', text = ~Watchers, textposition = 'middle right',
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Watchers and Forks',
xaxis = list(title = 'Watchers',
zeroline = TRUE,
range = c(0, 250)),
yaxis = list(title = 'Forks',
range = c(0,500)))
plot_ly(user.repo, x = ~watchers, y = ~forks, type = 'scatter',
mode = 'text', text = ~watchers, textposition = 'middle right',
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Watchers and Forks',
xaxis = list(title = 'Watchers',
zeroline = TRUE,
range = c(0, 250)),
yaxis = list(title = 'Forks',
range = c(0,500)))
plot_ly(user.repo, x = ~watchers, y = ~forks, type = 'scatter',
mode = 'text', text = ~watchers, textposition = 'middle right',
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Watchers and Forks',
xaxis = list(title = 'Watchers',
zeroline = TRUE,
range = c(0, 250)),
yaxis = list(title = 'Forks',
range = c(0,300)))
plot_ly(user.repo, x = ~watchers, y = ~forks, type = 'bar',
mode = 'text', text = ~watchers, textposition = 'middle right',
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Watchers and Forks',
xaxis = list(title = 'Watchers',
zeroline = TRUE,
range = c(0, 250)),
yaxis = list(title = 'Forks',
range = c(0,300)))
plot_ly(user.repo, x = ~watchers, y = ~forks, type = 'bar',
mode = 'text', text = ~watchers, textposition = 'middle right',
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Watchers and Forks',
xaxis = list(title = 'Watchers',
zeroline = TRUE,
range = c(0, 250)),
yaxis = list(title = 'Forks',
range = c(0,100)))
plot_ly(user.repo, x = ~watchers, y = ~forks, type = 'bar',
mode = 'text', text = ~watchers, textposition = 'middle right',
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Watchers and Forks',
xaxis = list(title = 'Watchers',
zeroline = TRUE,
range = c(0, 350)),
yaxis = list(title = 'Forks',
range = c(0,100)))
plot_ly(user.repo, x = ~watchers, y = ~forks, type = 'bar',
mode = 'text', text = ~watchers, textposition = 'middle right',
textfont = list(color = '#000000', size = 16)) %>%
layout(title = 'Watchers and Forks',
xaxis = list(title = 'Watchers',
zeroline = TRUE,
range = c(0, 500)),
yaxis = list(title = 'Forks',
range = c(0,100)))
source('~/Desktop/a5-assignment.R')
install.packages("jsonlite")
library(plotly) set.seed(100) d <- diamonds[sample(nrow(diamonds), 1000), ] plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity)
setwd("~/Desktop/info201-final-project/data")
setwd("~/Desktop/info201-final-project/data")
setwd('~/Desktop/info201-final-project/data')
read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
library(plotly)
library(dplyr)
View(data)
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
add_trace(z = ~Test, name = 'Test')
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
View(data)
Teams <- data %>%
select('TEAM') %>%
as.vector()
Teams <- data %>%
select(TEAM) %>%
as.vector()
View(Teams)
Teams <- data %>%
toString(select(TEAM) %>%
as.vector())
Teams <- data %>%
toString(select('TEAM') %>%
as.vector())
Teams <- data %>%
toString(select('TEAM') %>%
as.vector())
Teams <- toString(data %>%
select(TEAM) %>%
as.vector())
Teams <- toString(data %>%
select(TEAM))
Teams <- select(data$TEAM) %>%
as.vector()
Teams <- data$TEAM %>%
as.vector()
teams.vector <- data$TEAM %>%
as.vector()
# Visualization of data
setwd('~/Desktop/info201-final-project/data')
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
library(plotly)
library(dplyr)
teams.vector <- data$TEAM %>%
as.vector()
market.size.vector <- data$BMK %>%
as.vector()
uniform.vector <- data$UNI %>%
as.vector()
# Visualization of data
setwd('~/Desktop/info201-final-project/data')
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
library(plotly)
library(dplyr)
teams.vector <- data$TEAM %>%
as.vector()
market.big.vector <- data$BMK %>%
as.vector()
uniform.vector <- data$UNI %>%
as.vector()
coaching.vector <- data$CCH %>%
as.vector()
stadium.exp.vector <- data$STX %>%
as.vector()
market.small.vector <- data$SMK %>%
as.vector()
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
library(plotly)
library(dplyr)
teams.vector <- data$TEAM %>%
as.vector()
market.big.vector <- data$BMK %>%
as.vector()
uniform.vector <- data$UNI %>%
as.vector()
coaching.vector <- data$CCH %>%
as.vector()
stadium.exp.vector <- data$STX %>%
as.vector()
market.small.vector <- data$SMK %>%
as.vector()
affordability.vector <- data$AFF %>%
as.vector()
stl.prox.vector <- data$SLP %>%
as.vector()
nyc.prox.vector <- data$NYP %>%
as.vector()
fan.relations.vector <- data$FRL %>%
as.vector()
bang.vector <- data$BNG %>%
as.vector()
tradition.vector <- data$TRD %>%
as.vector()
bandwagon.vector <- data$BWG %>%
as.vector()
future.wins.vector <- data$FUT %>%
as.vector()
players.vector <- data$PLA %>%
as.vector()
owners.vector <- data$OWN %>%
as.vector()
behavior.vector <- data$BEH %>%
as.vector()
p <- plot_ly(data, x = ~TEAM, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
p <- plot_ly(data, x = ~TEAM, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p
# Stacked Bar Plot - Building
p <- plot_ly(data, x = ~Team, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p
p
# Stacked Bar Plot - Building
p <- plot_ly(data, x = ~Team, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p
p <- plot_ly(data, x = ~TEAM, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p <- plot_ly(data, x = ~TEAM, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
add_trace(y = ~CCH, name = 'Coaching') %>%
add_trace(y = ~STX, name = 'Stadium Experience') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p
p <- plot_ly(data, x = ~TEAM, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
add_trace(y = ~CCH, name = 'Coaching') %>%
add_trace(y = ~STX, name = 'Stadium Experience') %>%
add_trace(y = ~SMK, name = 'Small Market Value') %>%
add_trace(y = ~AFF, name = 'Affordability') %>%
add_trace(y = ~FRL, name = 'Fan Relations') %>%
add_trace(y = ~BNG, name = 'Bang For Your Buck') %>%
add_trace(y = ~TRD, name = 'Tradition') %>%
add_trace(y = ~BWG, name = 'Bandwagon Factor') %>%
add_trace(y = ~FUT, name = 'Future Wins') %>%
add_trace(y = ~PLA, name = 'Players Likability') %>%
add_trace(y = ~OWN, name = 'Ownership') %>%
add_trace(y = ~BEH, name = 'Behavior') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p
p
setwd('~/Desktop/info201-final-project/data')
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
p <- plot_ly(data, x = ~TEAM, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
add_trace(y = ~CCH, name = 'Coaching') %>%
add_trace(y = ~STX, name = 'Stadium Experience') %>%
add_trace(y = ~SMK, name = 'Small Market Value') %>%
add_trace(y = ~AFF, name = 'Affordability') %>%
add_trace(y = ~FRL, name = 'Fan Relations') %>%
add_trace(y = ~BNG, name = 'Bang For Your Buck') %>%
add_trace(y = ~TRD, name = 'Tradition') %>%
add_trace(y = ~BWG, name = 'Bandwagon Factor') %>%
add_trace(y = ~FUT, name = 'Future Wins') %>%
add_trace(y = ~PLA, name = 'Players Likability') %>%
add_trace(y = ~OWN, name = 'Ownership') %>%
add_trace(y = ~BEH, name = 'Behavior') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p
Teams <- data$TEAM
p <- plot_ly(data, x = ~Teams, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
add_trace(y = ~CCH, name = 'Coaching') %>%
add_trace(y = ~STX, name = 'Stadium Experience') %>%
add_trace(y = ~SMK, name = 'Small Market Value') %>%
add_trace(y = ~AFF, name = 'Affordability') %>%
add_trace(y = ~FRL, name = 'Fan Relations') %>%
add_trace(y = ~BNG, name = 'Bang For Your Buck') %>%
add_trace(y = ~TRD, name = 'Tradition') %>%
add_trace(y = ~BWG, name = 'Bandwagon Factor') %>%
add_trace(y = ~FUT, name = 'Future Wins') %>%
add_trace(y = ~PLA, name = 'Players Likability') %>%
add_trace(y = ~OWN, name = 'Ownership') %>%
add_trace(y = ~BEH, name = 'Behavior') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p
Team <- data$TEAM
setwd('~/Desktop/info201-final-project/data')
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
Team <- data$TEAM
p <- plot_ly(data, x = ~Teams, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
add_trace(y = ~CCH, name = 'Coaching') %>%
add_trace(y = ~STX, name = 'Stadium Experience') %>%
add_trace(y = ~SMK, name = 'Small Market Value') %>%
add_trace(y = ~AFF, name = 'Affordability') %>%
add_trace(y = ~FRL, name = 'Fan Relations') %>%
add_trace(y = ~BNG, name = 'Bang For Your Buck') %>%
add_trace(y = ~TRD, name = 'Tradition') %>%
add_trace(y = ~BWG, name = 'Bandwagon Factor') %>%
add_trace(y = ~FUT, name = 'Future Wins') %>%
add_trace(y = ~PLA, name = 'Players Likability') %>%
add_trace(y = ~OWN, name = 'Ownership') %>%
add_trace(y = ~BEH, name = 'Behavior') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
p <- plot_ly(data, x = ~Team, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
add_trace(y = ~CCH, name = 'Coaching') %>%
add_trace(y = ~STX, name = 'Stadium Experience') %>%
add_trace(y = ~SMK, name = 'Small Market Value') %>%
add_trace(y = ~AFF, name = 'Affordability') %>%
add_trace(y = ~FRL, name = 'Fan Relations') %>%
add_trace(y = ~BNG, name = 'Bang For Your Buck') %>%
add_trace(y = ~TRD, name = 'Tradition') %>%
add_trace(y = ~BWG, name = 'Bandwagon Factor') %>%
add_trace(y = ~FUT, name = 'Future Wins') %>%
add_trace(y = ~PLA, name = 'Players Likability') %>%
add_trace(y = ~OWN, name = 'Ownership') %>%
add_trace(y = ~BEH, name = 'Behavior') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
library(dplyr)
library(plotly)
VisualizeData <- function(x) {
Team <- data$TEAM
p <- plot_ly(x, x = ~Team, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
add_trace(y = ~CCH, name = 'Coaching') %>%
add_trace(y = ~STX, name = 'Stadium Experience') %>%
add_trace(y = ~SMK, name = 'Small Market Value') %>%
add_trace(y = ~AFF, name = 'Affordability') %>%
add_trace(y = ~FRL, name = 'Fan Relations') %>%
add_trace(y = ~BNG, name = 'Bang For Your Buck') %>%
add_trace(y = ~TRD, name = 'Tradition') %>%
add_trace(y = ~BWG, name = 'Bandwagon Factor') %>%
add_trace(y = ~FUT, name = 'Future Wins') %>%
add_trace(y = ~PLA, name = 'Players Likability') %>%
add_trace(y = ~OWN, name = 'Ownership') %>%
add_trace(y = ~BEH, name = 'Behavior') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
return(p)
}
VisualizeData(p)
VisualizeData <- function(x) {
p <- plot_ly(x, x = ~Team, y = ~BMK, type = 'bar', name = 'Big Market') %>%
add_trace(y = ~UNI, name = 'Uniform') %>%
add_trace(y = ~CCH, name = 'Coaching') %>%
add_trace(y = ~STX, name = 'Stadium Experience') %>%
add_trace(y = ~SMK, name = 'Small Market Value') %>%
add_trace(y = ~AFF, name = 'Affordability') %>%
add_trace(y = ~FRL, name = 'Fan Relations') %>%
add_trace(y = ~BNG, name = 'Bang For Your Buck') %>%
add_trace(y = ~TRD, name = 'Tradition') %>%
add_trace(y = ~BWG, name = 'Bandwagon Factor') %>%
add_trace(y = ~FUT, name = 'Future Wins') %>%
add_trace(y = ~PLA, name = 'Players Likability') %>%
add_trace(y = ~OWN, name = 'Ownership') %>%
add_trace(y = ~BEH, name = 'Behavior') %>%
layout(yaxis = list(title = 'Score'), barmode = 'stack')
return(p)
}
VisualizeData(data)
setwd("~/Desktop/info201-final-project")
>>>>>>> commit
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
setwd("~/Desktop/info201-final-project")
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
setwd("~/Desktop/info201-final-project/data")
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
View(data)
View(data)
library(plotly)
#Evan Van Cotthem
#Info 201
#Final Project
library(dplyr)
#Returns the data frame with the categories multiplied by their weights and
#the teams sorted by their total.score highest to lowest
CalculateScores <- function(data, cat.weights) {
for(i in 1:nrow(data)) {
data <- TeamScore(data, i, cat.weights)
}
data <- arrange(data, -total.score)
return(data)
}
#Returns the data frame with the selected team's categories multiplied by their weights
#and total.score calculated
TeamScore <- function(data, team, cat.weights) {
score <- 0
for(i in 1:14) {
data[team, i+1] <- data[team, i+1] * cat.weights[[i]]
score <- score + data[team, i+1]
}
data[team, "total.score"] <- score
return(data)
}
View(TeamScore)
View(TeamScore)
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
library(plotly)
p <- plot_ly(
x = data$TEAM
y = total.score,
name = "Total Score"
type = "bar"
)
p
p <- plot_ly(
x = data$TEAM
y = total.score,
name = "Total Score"
type = "bar"
)
p <- plot_ly(
x = data$TEAM,
y = total.score,
name = "Total Score"
type = "bar"
)
p
p <- plot_ly(
x = data$TEAM,
y = total.score,
name = "Total Score",
type = "bar"
)
p <- plot_ly(
x = teams,
y = total.score,
name = "Total Score",
type = "bar"
)
# INFO 201
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
teams <- data$TEAM
library(plotly)
p <- plot_ly(
x = teams,
y = total.score,
name = "Total Score",
type = "bar"
)
# Visualization - Teams Total Score
# Emilee Helm
# INFO 201
data <- read.csv('team-picking-categories.csv', stringsAsFactors = FALSE)
teams <- data$TEAM
library(plotly)
p <- plot_ly(
x = teams,
y = total.score,
name = "Total Score",
type = "bar"
)
VisualizeTotal <- function(data, y, title) {
column <- paste0('data$', y)
teams <- data$TEAM
p <- plot_ly(
x = data$teams,
y = eval(parse(text = column)),
name = "title",
type = "bar"
)
return(p)
}
VisualizeTotal <- function(data, y, title) {
column <- paste0('data$', y)
teams <- data$TEAM
p <- plot_ly(
x = data$teams,
y = eval(parse(text = column)),
name = title,
type = "bar"
)
return(p)
}
Visualize <- function(data, y, title) {
column <- paste0('data$', y)
p <- plot_ly(
x = data$TEAM,
y = eval(parse(text = column)),
name = title,
type = "bar"
)
return(p)
}
setwd("~/Desktop/info201-final-project")
setwd("~/Desktop/info201-final-project/scripts")
setwd("~/Desktop/info201-final-project/scripts")
